# Quick rundown of data types:
# - float: "floating-point" number, can have decimal places. Use a period as the decimal separator, please, e.g. 3.14
# - int: "integers", whole numbers (no decimals)
# - boolean: true/false
# - hexadecimal (color): "short" value (0-255) represented by TWO hexadecimal (base-16) numbers., e.g. 0xFF
#   Probably familiar to you if you've used rich-text editors or drawing programs.
#   Normally, there'd be 3 values (R, G, B), but the pie menu is just gray, so all 3 are assigned the same value.
#   Recommended to use a hex colour picker.


# Debug mode -- enable this when reproducing your bug; disable normally
# Prints many, many, many messages to the log file
debug=false


            #######################
            # Performance options #
            #######################

# Check for conflicting keybinds whenever the keybind menu is closed ("lazy"), or whenever a key is pressed (old behaviour)
# (boolean)
# Set this to "false" if you use mods that let you change keybinds OUTSIDE the keybind menu (like a ".bind" command),
# or if the new behaviour causes problems
lazy_conflict_check=true

# How many vertices/facets the pie menu circle should have in total (int)
# I picked 240 because it's divisible by many possible sector numbers and gives reasonable results for others
# Best not to change this, because the pie menu won't have *exactly* this many vertices (the code is complicated)
# If you make it too low, you'll know because the edges of the menu will be very flat
# Can *technically* help performance, but probably not much unless your hardware is VERY slow
circle_vertices=240

# If transparency should be enabled for the pie menu (boolean)
# Can slightly increase performance by avoiding blend calculations
pie_menu_blend=true

# Whether there should be a darkened background on the pie menu screen (boolean)
# Has a decent impact on performance, because of post-processing
darkened_background=true

# Draw label texts with shadow (boolean)
# Disabling this may increase performance
label_text_shadow=true


            #####################
            # Behaviour options #
            #####################

# Attack workaround (boolean)
# Makes Attack/Break work properly on the pie menu
# Messes with the attack cooldown; may cause problems
enable_attack_workaround=false

# Keys that should not open a pie menu (list of keycode ints)
# See https://www.glfw.org/docs/3.4/group__keys.html for keycodes
# Defaults to WASD
skipped_keys=[87, 65, 83, 68, 280, 258, 340, 341, 342, 343, 344, 345, 346, 347]

# Use behaviour similar to KeybindFix for keys that don't open a pie menu (boolean)
# Makes these keys activate all bindings, instead of just one
use_keybind_fix=true


            ##########################
            # Pie menu customisation #
            ##########################

# How much the selected sector expands by (float)
expansion_factor_when_selected=1.15

# How much extra to shrink the pie menu by (int)
pie_menu_margin=0

# How big the pie menu should be, relative to the screen size (float)
pie_menu_scale=0.6

# How big the cancel zone should be, relative to the pie menu size (float)
cancel_zone_scale=0.25

# Grayscale color of the pie menu (gray by default) (hexadecimal COLOR)
pie_menu_color=0x40

# Grayscale color of the highlighted section (white by default) (hexadecimal COLOR) 
pie_menu_highlight_color=0xFF

# How much lighter to make every other sector (so you can tell individual sectors apart) (hexadecimal)
pie_menu_color_lighten_factor=0x19

# How opaque the pie menu should be (hexadecimal COLOR)
# Note: This is OPACITY, NOT transparency -- lower values make it more transprent
# See Performance options > pie menu blend -- set that to true if you want a fully
# opaque pie menu, since that will avoid extra calculations associated with transparency,
# even if this value makes the pie menu completely opaque
pie_menu_alpha=0x90

# Whether the pie menu sectors should have gradation (not a solid color) (boolean)
sector_gradation=true

# How far into the sector the label texts reach (int)
# (unless the text goes off the screen, in which case it's
#  moved back as far as needed until it fits on-screen)
label_text_inset=6

# Whether to animate the pie menu opening (boolean)
# Can be distracting, disabled by default now
# Probably doesn't impact performance very much
animate_pie_menu=false